def solution():
    """Гильдон играет в компьютерную игру под названием Block Adventure. В ряд выставлены n столбиков из кубиков, эти
    столбики пронумерованы от 1 до n. Все кубики имеют равную высоту. Высота i-го столбика равна hi — числу кубиков в
    i-м столбике.

    Гильдон играет за персонажа, который может стоять лишь наверху любого столбика. В начале игры персонаж стоит на 1-м
    столбике. Цель игры — оказаться на n-м столбике.

    У персонажа есть рюкзак, в который он может положить сколько угодно кубиков. Когда персонаж стоит на i-м столбике,
    Гильдон может выполнить одно из следующих трех действий сколько угодно раз:
        если в i-м столбике есть хотя бы один кубик, то можно убрать один кубик с этого столбика и положить его в
        рюкзак;
        если в рюкзаке есть хотя бы один кубик, можно один кубик достать и положить на i-й столбик;
        если i<n и |hi−hi+1|≤k, можно передвинуть персонажа на верх i+1-го столбика. k — некоторое неотрицательное целое
        число, зафиксированное в начале игры. Обратите внимание, что можно переместиться лишь в следующий столбик.
    В действиях первого и второго типа персонаж остается на i-м столбике, при этом изменяется hi.

    Изначально у персонажа есть m кубиков в рюкзаке. Гильдон хочет знать, возможно ли выиграть игру. Помогите Гильдону
    найти ответ на этот вопрос.

    Входные данные
    Каждый тест состоит из одного или нескольких тестовых случаев. Первая строка содержит количество тестовых случаев
    t (1≤t≤1000). Далее следуют описания тестовых случаев.

    Первая строка каждого тестового случая содержит три целых числа n, m и k (1≤n≤100, 0≤m≤106, 0≤k≤106) — количество
    столбиков, количество кубиков в рюкзаке изначально и неотрицательное число k, описанное в условии.

    Вторая строка каждого тестового случая содержит n целых чисел. i-е из этих чисел равно hi (0≤hi≤106) — изначальная
    высота i-го столбика.

    Выходные данные
    Для каждого тестового случая выведите «YES», если возможно выиграть игру. Иначе выведите «NO»."""
    n, m, k = [int(_) for _ in input().split()]
    h = []
    [h.append(int(j)) for j in input().split()]
    t = 0
    while t < n - 1:
        if h[t] >= h[t] - h[t + 1] and h[t] > h[t + 1] - k:
            m += h[t] - h[t + 1] + k
            h[t] -= h[t] - h[t + 1] + k
            if h[t] < 0:
                m += h[t]
                h[t] = 0
        if h[t] < h[t + 1] - k:
            m -= h[t + 1] - k - h[t]
            h[t] += h[t + 1] - k - h[t]
            if m < 0:
                return "NO"
        if abs(h[t] - h[t + 1]) <= k:
            t += 1
        else:
            return "NO"
    return "YES"
    pass


for i in range(int(input())):
    print(solution())
